<?php

/**
 * @file
 * Hook implementations for Boston College.
 */

define('BOSTON_COLLEGE_ARCHIVAL_PDF_DATASTREAM_ID', 'ARCHIVE-PDF');

/**
 * Implements hook_menu_alter().
 */
function boston_college_menu_alter(&$items) {
  // Swap in our alternate form.
  $items['islandora/object/%islandora_object/islandora_scholar_upload'] = array(
    'file path' => drupal_get_path('module', 'boston_college'),
    'file' => 'includes/document.tab.inc',
    'page callback' => 'boston_college_document_view',
  ) + $items['islandora/object/%islandora_object/islandora_scholar_upload'];
}

/**
 * Implements hook_islandora_ingest_steps_alter().
 */
function boston_college_islandora_ingest_steps_alter(&$steps, &$form_state) {
  unset($steps['islandora_scholar_file_upload']);
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function boston_college_islandora_ingest_steps(array $form_state) {
  $models = boston_college_citation_models();

  $steps = array();
  $shared_storage = islandora_ingest_form_get_shared_storage($form_state);

  if (array_intersect($models, $shared_storage['models'])) {
    $steps['boston_college_document_upload'] = array(
      'weight' => 10,
      'type' => 'form',
      'form_id' => 'boston_college_document_upload_ingest_step_form',
      'module' => 'boston_college',
      'file' => 'includes/document.ingest_step.inc',
    );
  }

  return $steps;
}

/**
 * Alter the image_field_caption field to look like it takes a URL.
 */
function boston_college_field_widget_form_alter(&$element, &$form_state, $context) {
  // Add display_field setting to field because file_field_widget_form() assumes
  // it is set.
  $instance = $context['instance'];
  $settings = $instance['settings'];

  if (isset($settings['image_field_caption']) && $instance['widget']['type'] == 'image_image' && $settings['image_field_caption']) {
    foreach (element_children($element) as $delta) {
      // Add all extra functionality provided by the image widget.
      $element[$delta]['#process'][] = 'boston_college_image_field_caption_widget_process';
    }
  }
}

/**
 * An element #process callback for the image_image field type.
 *
 * Expands the image_image type to include the alt and title fields.
 */
function boston_college_image_field_caption_widget_process($element, &$form_state, $form) {
  // Add the additional alt and title fields.
  $element['image_field_caption']['#title'] = t('Link');
  $element['image_field_caption']['#base_type'] = 'textfield';
  $element['image_field_caption']['#format'] = 'plain_text';
  $element['image_field_caption']['#description'] = t('The link the image will redirect to.');
  return $element;
}

/**
 * Implements hook_islandora_derivative().
 */
function boston_college_islandora_derivative(AbstractObject $object) {
  $mod_path = drupal_get_path('module', 'boston_college');
  $derivatives = array(
    array(
      'source_dsid' => 'MODS',
      'destination_dsid' => NULL,
      'weight' => 0,
      'function' => array(
        'boston_college_update_object_label_from_mods_derivative',
      ),
      'file' => "$mod_path/includes/derivatives.inc",
    ),
  );

  $models = boston_college_citation_models();
  if (array_intersect($models, $object->models)) {
    module_load_include('inc', 'islandora_scholar', 'includes/utilities');
    $derivatives[] = array(
      'source_dsid' => BOSTON_COLLEGE_ARCHIVAL_PDF_DATASTREAM_ID,
      'destination_dsid' => 'PDF',
      'function' => array(
        'boston_college_build_pdf',
      ),
      'file' => "$mod_path/includes/splash.inc",
    );
    $derivatives = array_merge($derivatives, islandora_scholar_get_derivatives());
  }

  return $derivatives;
}

/**
 * Grab models used to represent citations.
 *
 * @return array
 *   An array of strings representing content model PIDs.
 */
function boston_college_citation_models() {
  return array(
    'ir:citationCModel',
    'ir:thesisCModel',
    'ir:undergraduateETDCModel',
    'ir:graduateETDCModel',
  );
}

/**
 * Implements hook_islandora_datastream_purged().
 */
function boston_college_islandora_datastream_purged(AbstractObject $object, $dsid) {
  $models = boston_college_citation_models();
  $purge_derived_dsids = array(
    BOSTON_COLLEGE_ARCHIVAL_PDF_DATASTREAM_ID,
    'PDF',
  );

  if (!(in_array($dsid, $purge_derived_dsids) && array_intersect($models, $object->models))) {
    return;
  }

  module_load_include('inc', 'islandora', 'includes/utilities');
  $hooks = islandora_invoke_hook_list(ISLANDORA_DERVIATIVE_CREATION_HOOK, $object->models, array($object));

  $hook_filter = function ($hook_def) use ($purge_derived_dsids) {
    return isset($hook_def['source_dsid']) && isset($hook_def['destination_dsid']) ?
      in_array($hook_def['source_dsid'], $purge_derived_dsids) :
      FALSE;
  };
  $hooks = array_filter($hooks, $hook_filter);

  $dsid_map = function ($hook_definition) {
    return $hook_definition['destination_dsid'];
  };

  $dsids = array_map($dsid_map, $hooks);
  array_map(array($object, 'purgeDatastream'), $dsids);
}

/**
 * Implements hook_menu().
 */
function boston_college_menu() {
  $items = array();

  $items['admin/islandora/boston_college'] = array(
    'title' => 'Boston College Configuration',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('boston_college_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.form.inc',
  );

  return $items;
}

/**
 * Implements hook_islandora_view_object().
 */
function boston_college_islandora_view_object(AbstractObject $object) {
  if (array_intersect(array('ir:undergraduateETDCModel', 'ir:graduateETDCModel'), $object->models)) {
    module_load_include('inc', 'islandora_scholar', 'includes/utilities');
    return islandora_scholar_get_view($object);
  }
}
